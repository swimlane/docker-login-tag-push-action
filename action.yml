name: 'Docker Login Tag and Push'
description: 'Logs tags and pushes image into Registry'

inputs:
  image:
    description: 'Local image name. Assumes repository not present and tag present.'
    required: true
  repo:
    description: 'Registry host name'
    required: true
  username:
    description: 'Registry username'
    required: true
  password:
    description: 'Registry password'
    required: true
  tag:
    description: 'New tag if retagging is needed'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Get new image name
      id: new-image-name
      uses: actions/github-script@v7
      env:
        repo: ${{ inputs.repo }}
        tag: ${{ inputs.tag }}
        image: ${{ inputs.image }}
      with:
        script: |
          let { repo, tag, image } = process.env;
          repo = repo ? repo + '/' : repo;
          const fullName = image.split('/');
          if (fullName.length == 2 && fullName[0].Contains('.')) image = fullName[1];
          else if (fullName.length > 2) image = fullName.slice(-2).join('/');
          if (tag) {
            const arr=image.split(':');
            arr[arr.length - 1]=tag;
            core.setOutput('image', repo+arr.join(':'));
          } else {
            core.setOutput('image', repo+image);
          }

    - name: Docker Login
      if: inputs.repo == ''
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Login
      if: inputs.repo != ''
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.repo}}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Tag and Push
      id: tag-push
      shell: bash
      run: |
        docker tag ${{ inputs.image }} ${{ steps.new-image-name.outputs.image }}
        docker push ${{ steps.new-image-name.outputs.image }}
